version: "3.7"

volumes:
  postgres-db:

networks:
  dev-net:
    external: true
    name: dev-net

services:
  etcd:
    image: bitnami/etcd:latest
    hostname: etcd
    networks:
      - dev-net
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
    restart: on-failure
  # Deprecated by Micro framework in favour of etcd, but we keep it for now
  # until everything has been migrated properly
  consul:
    image: consul
    hostname: consul
    networks:
      - dev-net
    restart: on-failure
  redis:
    image: redis:latest
    networks:
      - dev-net
    restart: on-failure
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - dev-net
    env_file:
      - $HOME/.config/dev-env/envfiles/zookeeper.env
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
    expose:
      - 2181
    restart: on-failure
  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - dev-net
    depends_on:
      - zookeeper
    env_file:
      - $HOME/.config/dev-env/envfiles/kafka.env
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
    restart: on-failure
  postgres:
    image: postgres:latest
    networks:
      - dev-net
    volumes:
      - postgres-db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    expose:
      - 5432
  dev-env:
    image: birchwoodlangham/dockerised-development-environment:latest
    networks:
      - dev-net
    environment:
      DBUS_SESSION_BUS_ADDRESS: unix:path=/var/run/user/1000/bus
      DISPLAY: ${DISPLAY}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      HASHED_PASSWORD: ${CODE_SERVER_HASHED_PASSWORD}
    ipc: host
    ports:
      - 8080:8080
    security_opt:
      - seccomp:unconfined
    volumes:
      - type: bind
        source: /tmp/.X11-unix
        target: /tmp/.X11-unix
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
      - type: bind
        source: ${XDG_RUNTIME_DIR}
        target: ${XDG_RUNTIME_DIR}
      - type: bind
        source: $HOME/code
        target: /home/${USER_NAME}/code
      - type: bind
        source: $HOME/.ssh
        target: /home/${USER_NAME}/.ssh
      - type: bind
        source: $HOME/.netrc
        target: /home/${USER_NAME}/.netrc
      - type: bind
        source: $HOME/.gitconfig
        target: /home/${USER_NAME}/.gitconfig
      - type: bind
        source: $HOME/.config/dev-env/IntelliJIdea
        target: /home/${USER_NAME}/.IntelliJIdea2020.1
      - type: bind
        source: $HOME/.java
        target: /home/${USER_NAME}/.java
      - type: bind
        source: $HOME/.fonts
        target: /home/${USER_NAME}/.fonts
      - type: bind
        source: ${DEV_ENV_EXTENSIONS_FOLDER}
        target: /code-server/extensions
      - type: bind
        source: ${DEV_ENV_USER_FOLDER}
        target: /code-server/user-data
