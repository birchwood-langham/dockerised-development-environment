version: "3.7"

volumes:
  postgres-db:

services:
  consul:
    image: consul
    hostname: consul
    container_name: consul
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
  # Micro API service for handling and routing Go-Micro based services
  micro-api:
    image: microhq/micro:latest
    hostname: micro-api
    container_name: micro-api
    env_file: 
      - ./envfiles/micro.env
    command: ["api"]
    ports:
      - 8080:8080
  # Micro Web service for monitoring Go-Micro based services
  micro-web:
    image: microhq/micro:latest
    hostname: micro-web
    container_name: micro-web
    env_file: 
      - ./envfiles/micro.env
    ports:
      - 8082:8082
    command: ["web"]
    depends_on:
      - micro-api
  zookeeper-1:
    image: ${ZOOKEEPER_IMAGE}
    env_file:
      - ./envfiles/zookeeper-full.env
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
    expose: 
      - 2181
  zookeeper-2:
    image: ${ZOOKEEPER_IMAGE}
    env_file:
      - ./envfiles/zookeeper-full.env
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 2181
    expose: 
      - 2181
  zookeeper-3:
    image: ${ZOOKEEPER_IMAGE}
    env_file:
      - ./envfiles/zookeeper-full.env
    environment:
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_CLIENT_PORT: 2181
    expose: 
      - 2181
  kafka-1:
    image: ${KAFKA_IMAGE}
    depends_on: 
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    env_file:
      - ./envfiles/kafka-full.env
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092
  kafka-2:
    image: ${KAFKA_IMAGE}
    depends_on: 
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    env_file:
      - ./envfiles/kafka-full.env
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9092
  kafka-3:
    image: ${KAFKA_IMAGE}
    depends_on: 
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    env_file:
      - ./envfiles/kafka-full.env
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:9092
  postgres:
    image: postgres:latest
    container_name: postgres
    volumes:
      - postgres-db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    expose:
      - 5432
  dev-env: 
    image: ${DEV_ENV_IMAGE}
    container_name: dev-env
    environment: 
      DBUS_SESSION_BUS_ADDRESS: unix:path=/var/run/user/1000/bus
      DISPLAY: 
    ipc: host
    command: [ "zsh" ]
    tty: true
    volumes:
      - type: bind
        source: /tmp/.X11-unix
        target: /tmp/.X11-unix
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
      - type: bind
        source: /run/user/${USER_ID}
        target: /run/user/${USER_ID}
      - type: bind
        source: $HOME/go
        target: /home/${USER_NAME}/go
      - type: bind
        source: $HOME/code
        target: /home/${USER_NAME}/code
      - type: bind
        source: $HOME/.dev-env-config
        target: /home/${USER_NAME}/.config
      - type: bind
        source: $HOME/.ssh
        target: /home/${USER_NAME}/.ssh
      - type: bind
        source: $HOME/.netrc
        target: /home/${USER_NAME}/.netrc
      - type: bind
        source: $HOME/.gitconfig
        target: /home/${USER_NAME}/.gitconfig
      - type: bind
        source: $HOME/.IntelliJIdea2019.2
        target: /home/${USER_NAME}/.IntelliJIdea2019.2
      - type: bind
        source: $HOME/.java
        target: /home/${USER_NAME}/.java
      - type: bind
        source: $HOME/.fonts
        target: /home/${USER_NAME}/.fonts
